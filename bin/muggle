#!/usr/bin/env ruby
require 'lib/ssh_muggle'
require 'optparse'

class MuggleClient
  VALID_COMMANDS = %w(fetch setup)
  
  def initialize(opts)
    @opts = opts
  end
  
  def fetch
    pool = read_hostsfile
    pool.dump_keyfiles
  end
  
  def setup
    unless File.directory?('keys')
      $stdout.print "Creating keys directory..."
      FileUtils.mkdir('keys') 
      $stdout.puts "  [DONE]"
    end
    
    $stdout.print "Reading hostfile..."
    pool = read_hostsfile
    $stdout.puts "  [DONE]"
    $stdout.print "Fetching keys from servers abd writing config to muggle.conf..."
    config = SSHMuggle::Configuration.build(pool)
    File.open('muggle.conf', 'w+') do |file|
      file.puts config
    end
    $stdout.puts "  [DONE]"
    $stdout.print "Writing keyfiles..."
    pool.dump_keyfiles
    $stdout.puts "  [DONE]"
  end

  def method_missing(method, *args)
    exit_with_help("That command isn't supportet!")
  end
  
  private
    def read_hostsfile
      SSHMuggle::ServerPool.from_hostfile(File.read('/etc/hosts'))
    end

    def exit_with_help(msg)
      reason = "\n    #{msg}\n    Valid commands: #{VALID_COMMANDS.join(', ')}\n\n#{@opts}\n"
      abort(reason)
    end
end

opts = OptionParser.new do |o|
  o.banner = "Usage: muggle [options]"

  o.on("-h", "--help", "This help screen" ) do
    puts o
    exit
  end
end

opts.parse!(ARGV)
command = ARGV[0]
if command.nil?
  puts opts
else
  client = MuggleClient.new(opts)
  client.send(command)
end